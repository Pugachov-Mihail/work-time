# Generated by Django 3.2.6 on 2021-11-29 21:54

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShopName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, null=True, unique=True, verbose_name='Название торговой точки')),
            ],
            options={
                'verbose_name': 'Название торговой точки',
            },
        ),
        migrations.CreateModel(
            name='PlansMonth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal', models.IntegerField(verbose_name='Железо')),
                ('accs', models.IntegerField(verbose_name='Аксы')),
                ('dop', models.IntegerField(verbose_name='Доп оборот')),
                ('oss', models.IntegerField(verbose_name='ОСС')),
                ('setting', models.IntegerField(verbose_name='Настройки')),
                ('bil', models.IntegerField(verbose_name='Билайн')),
                ('mega', models.IntegerField(verbose_name='Мегафон')),
                ('yota', models.IntegerField(verbose_name='Yota')),
                ('tele', models.IntegerField(verbose_name='Теле 2')),
                ('persone', models.IntegerField(verbose_name='Сотрудников')),
                ('date', models.DateTimeField(auto_now=True)),
                ('shopname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.shopname', verbose_name='Название ТТ')),
            ],
            options={
                'verbose_name_plural': 'Планы на день',
            },
        ),
        migrations.CreateModel(
            name='PersonalShope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('workShop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.shopname', verbose_name='Сотрудник торговой точки')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'Сотрудники магазина',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
